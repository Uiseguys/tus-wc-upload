{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.tsx","localImports":[],"externalImports":["@stencil/core","@uppy/core","@uppy/core","@uppy/dashboard","@uppy/dashboard","@uppy/xhr-upload","@uppy/xhr-upload","module","tus-js-client"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"file-uploader","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.css","cmpRelativePath":"file-uploader.css","originalComponentPath":"file-uploader.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppProfile","documentation":"","type":"typeof AppProfile"},"encapsulationMeta":0,"componentClass":"AppProfile","membersMeta":{"file":{"memberType":1,"attribName":"file","attribType":{"text":"File[]","optional":false,"typeReferences":{"File":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"file","documentation":"","type":"File[]"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.js"},"jsText":"import * as Uppy from '@uppy/core';\r\nimport * as XHRUpload from '@uppy/xhr-upload';\r\nimport * as Dashboard from '@uppy/dashboard';\r\n// const Uppy = require('@uppy/core')\r\n// const XHRUpload = require('@uppy/xhr-upload')\r\n// const Dashboard = require('@uppy/dashboard')\r\nexport class AppProfile {\r\n    constructor() {\r\n        this.file = [];\r\n    }\r\n    componentDidLoad() {\r\n        if (this.file) {\r\n            console.log(Uppy);\r\n            console.log(XHRUpload);\r\n            console.log(Dashboard);\r\n            //   var upload = new tus.Upload(this.file[0], {\r\n            //     endpoint: \"https://virtserver.swaggerhub.com/bakirmanar/POST_API/1.0.0/pet/1/uploadImage\",\r\n            //     retryDelays: [0, 1000, 3000, 5000],\r\n            //     metadata: {\r\n            //       filename: this.file[0].name,\r\n            //       filetype: this.file[0].type\r\n            //     },\r\n            //     onError: function (error) {\r\n            //       console.log(\"Failed because: \" + error)\r\n            //     },\r\n            //     onProgress: function (bytesUploaded, bytesTotal) {\r\n            //       var percentage = (bytesUploaded / bytesTotal * 100).toFixed(2)\r\n            //       console.log(bytesUploaded, bytesTotal, percentage + \"%\")\r\n            //     },\r\n            //     onSuccess: function () {\r\n            //       console.log(\"Download %s from %s\", upload.file.name, upload.url)\r\n            //     }\r\n            //   })\r\n            //   // Start the upload\r\n            //   upload.start()\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", null,\r\n            h(\"h2\", null, \"File List \"),\r\n            this.file ? h(\"ul\", null, this.file.map((files) => h(\"li\", null, files.name))) : null));\r\n    }\r\n    static get is() { return \"file-uploader\"; }\r\n    static get properties() { return {\r\n        \"file\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"file\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:file-uploader:**/\"; }\r\n}\r\n"}