{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/file-chooser/file-chooser.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"cwc-file-chooser","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/file-chooser/file-chooser.css","cmpRelativePath":"file-chooser.css","originalComponentPath":"file-chooser.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppChooser","documentation":"","type":"typeof AppChooser"},"encapsulationMeta":0,"componentClass":"AppChooser","membersMeta":{"file":{"memberType":16},"uppy":{"memberType":16},"error":{"memberType":16},"currentFiles":{"memberType":16},"upload":{"memberType":16},"stringsText":{"memberType":16},"allowDrop":{"memberType":1,"attribName":"allow-drop","attribType":{"text":"boolean","optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"allowDrop","documentation":"","type":"boolean"}},"allowClick":{"memberType":1,"attribName":"allow-click","attribType":{"text":"boolean","optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"allowClick","documentation":"","type":"boolean"}},"allowMultiple":{"memberType":1,"attribName":"allow-multiple","attribType":{"text":"boolean","optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"allowMultiple","documentation":"","type":"boolean"}},"accept":{"memberType":1,"attribName":"accept","attribType":{"text":"string[]","optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"accept","documentation":"","type":"string[]"}}},"eventsMeta":[{"eventMethodName":"push","eventName":"push","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"push","documentation":"","type":"EventEmitter<any>"}},{"eventMethodName":"filesChosen","eventName":"filesChosen","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"filesChosen","documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[]},"hasSlot":true,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/file-chooser/file-chooser.js"},"jsText":"export class AppChooser {\r\n    constructor() {\r\n        this.allowDrop = true;\r\n        this.allowClick = true;\r\n        this.allowMultiple = true;\r\n        this.accept = [];\r\n        this.file = [];\r\n        this.error = [];\r\n        this.currentFiles = [];\r\n        this.upload = [];\r\n        this.stringsText = \"\";\r\n    }\r\n    componentDidLoad() {\r\n        this.initDragDropArea();\r\n    }\r\n    initDragDropArea() {\r\n        if (this.allowDrop == \"true\" && this.allowClick == \"true\") {\r\n            this.stringsText = this.allowMultiple == \"true\" ? \"Please drop files here or \" : \"Please drop file or \";\r\n        }\r\n        else if (this.allowDrop == \"true\" && this.allowClick == \"false\") {\r\n            this.stringsText = this.allowMultiple == \"true\" ? \"Please drop files\" : \"Please drop file\";\r\n        }\r\n        else if (this.allowDrop == \"false\" && this.allowClick == \"true\") {\r\n            this.stringsText = \"\";\r\n        }\r\n        else {\r\n            this.stringsText = \"Please allow drop or allow Click\";\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        this.currentFiles = [];\r\n        this.addedFiles(e.target.files);\r\n        this.push.emit(e);\r\n    }\r\n    drop(e) {\r\n        e.preventDefault();\r\n        if (this.allowMultiple == \"true\") {\r\n            this.addedFiles(e.dataTransfer.files);\r\n        }\r\n        else {\r\n            if (e.dataTransfer.files.length > 1) {\r\n                this.errorHandler(\"You can upload single file at a time.\");\r\n                let passedFiles = [];\r\n                passedFiles = [...passedFiles, e.dataTransfer.files[0]];\r\n                this.addedFiles(passedFiles);\r\n            }\r\n            else {\r\n                this.addedFiles(e.dataTransfer.files);\r\n            }\r\n        }\r\n    }\r\n    addedFiles(files) {\r\n        var hit;\r\n        if (this.accept == [] || this.accept.length == 0 || this.accept == null) {\r\n            this.filesChosen.emit(files);\r\n        }\r\n        else {\r\n            let checkedFile = [];\r\n            for (let j = 0; j < files.length; j++) {\r\n                hit = false;\r\n                for (let i = 0; i < this.accept.length; i++) {\r\n                    if (this.formatValidator(this.accept[i], files[j].type) == true) {\r\n                        hit = true;\r\n                        checkedFile = [...checkedFile, files[j]];\r\n                        break;\r\n                    }\r\n                }\r\n                if (hit == false) {\r\n                    this.errorHandler(\"Please select the file of required format.\");\r\n                }\r\n            }\r\n            this.filesChosen.emit(checkedFile);\r\n        }\r\n    }\r\n    formatValidator(accept, incoming) {\r\n        accept = accept.slice(accept.indexOf(\".\") + 1, accept.length);\r\n        incoming = incoming.slice(incoming.indexOf(\"/\") + 1, incoming.length);\r\n        if (accept == incoming) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    allowDropFile(ev) {\r\n        if (this.allowDrop == \"true\") {\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n    errorHandler(error) {\r\n        this.error = [...this.error, error];\r\n        let timer;\r\n        clearInterval(timer);\r\n        timer = setInterval(() => {\r\n            this.error = [];\r\n        }, 5000);\r\n    }\r\n    render() {\r\n        var multiple = this.allowMultiple == \"true\" ? true : false;\r\n        return ([\r\n            h(\"div\", { class: \"st_container\" },\r\n                h(\"div\", { class: \"st_top_50 dashed-border\", onDrop: e => this.drop(e), onDragOver: e => this.allowDropFile(e) },\r\n                    h(\"div\", { class: \"st_file_contain st_text-center\" },\r\n                        h(\"div\", { class: \"st_file_icon\" },\r\n                            h(\"div\", { class: \"st_scb-drop-area\" },\r\n                                h(\"img\", { src: \"/assets/icon/arrow-pointing-up.svg\" }))),\r\n                        h(\"div\", { class: \"st_scb-fi-default-label\" },\r\n                            h(\"slot\", { name: \"drop-target\" },\r\n                                h(\"p\", null,\r\n                                    this.stringsText,\r\n                                    \" \")),\r\n                            h(\"slot\", { name: \"text\" })),\r\n                        this.allowClick == \"true\" ?\r\n                            h(\"div\", { class: \"st_file-upload\" },\r\n                                h(\"slot\", { name: \"dialog-trigger\" },\r\n                                    h(\"label\", { class: \"st_file-upload__label\" },\r\n                                        \"Choose\",\r\n                                        this.allowMultiple == \"true\" ? \" Files\" : \" File\")),\r\n                                h(\"input\", { id: \"upload\", class: \"st_file-upload__input\", type: \"file\", onChange: e => this.handleChange(e), accept: this.accept.toString(), multiple: multiple }))\r\n                            : null,\r\n                        h(\"div\", { class: \"st_scb-fi-default-error\" }, this.error.map((err) => h(\"p\", { class: \"error_one\" },\r\n                            h(\"img\", { src: \"/assets/icon/error-triangle.svg\" }),\r\n                            err,\r\n                            \" \"))))))\r\n        ]);\r\n    }\r\n    static get is() { return \"cwc-file-chooser\"; }\r\n    static get properties() { return {\r\n        \"accept\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"accept\"\r\n        },\r\n        \"allowClick\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"allow-click\"\r\n        },\r\n        \"allowDrop\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"allow-drop\"\r\n        },\r\n        \"allowMultiple\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"allow-multiple\"\r\n        },\r\n        \"currentFiles\": {\r\n            \"state\": true\r\n        },\r\n        \"error\": {\r\n            \"state\": true\r\n        },\r\n        \"file\": {\r\n            \"state\": true\r\n        },\r\n        \"stringsText\": {\r\n            \"state\": true\r\n        },\r\n        \"upload\": {\r\n            \"state\": true\r\n        },\r\n        \"uppy\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"push\",\r\n            \"method\": \"push\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }, {\r\n            \"name\": \"filesChosen\",\r\n            \"method\": \"filesChosen\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:cwc-file-chooser:**/\"; }\r\n}\r\n"}