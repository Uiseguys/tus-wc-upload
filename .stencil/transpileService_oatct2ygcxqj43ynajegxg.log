{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/app-main/app-root.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"cwc-file-chooser"},{"tag":"cwc-upload-item"}],"cmpMeta":{"tagNameMeta":"app-root","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/app-main/app-root.css","cmpRelativePath":"app-root.css","originalComponentPath":"app-root.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppRoot","documentation":"","type":"typeof AppRoot"},"encapsulationMeta":0,"componentClass":"AppRoot","membersMeta":{"errors":{"memberType":32,"attribType":{"text":"(e: any) => void","optional":false,"typeReferences":{}},"jsdoc":{"name":"errors","documentation":"","type":"(e: any) => void"}},"files":{"memberType":16},"filesList":{"memberType":16},"note":{"memberType":16},"refreshState":{"memberType":16}},"eventsMeta":[{"eventMethodName":"allFiles","eventName":"allFiles","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"allFiles","documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[{"eventName":"filesChosen","eventMethodName":"onFilesChosen","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onFilesChosen","documentation":"","type":"(event: any) => void"}},{"eventName":"errors","eventMethodName":"onError","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onError","documentation":"","type":"(e: any) => void"}},{"eventName":"progress","eventMethodName":"onprogress","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onprogress","documentation":"","type":"(e: any) => void"}},{"eventName":"cancelEvent","eventMethodName":"onCancel","eventCapture":false,"eventPassive":false,"eventDisabled":false,"jsdoc":{"name":"onCancel","documentation":"","type":"(e: any) => void"}}]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/uploadlibrarynode/src/components/app-main/app-root.js"},"jsText":"export class AppRoot {\r\n    constructor() {\r\n        this.files = [];\r\n        this.filesList = [];\r\n        this.note = \"Uploads List\";\r\n        this.refreshState = false;\r\n    }\r\n    errors(e) {\r\n        console.log(e);\r\n    }\r\n    onFilesChosen(event) {\r\n        this.files = event.detail;\r\n        for (let i = 0; i < this.files.length; i++) {\r\n            var file = this.files[i];\r\n            this.filesList = [...this.filesList, file];\r\n        }\r\n    }\r\n    onError(e) {\r\n        console.log(e.detail);\r\n    }\r\n    onprogress(e) {\r\n        let index = this.filesList.findIndex(x => x.name == e.detail.name && x.size == e.detail.size);\r\n        if (index > -1) {\r\n            this.filesList[index] = e.detail;\r\n            console.log(e.detail.progress.percentage);\r\n        }\r\n    }\r\n    onCancel(e) {\r\n        let index = this.filesList.findIndex(x => x.name == e.detail.name && x.size == e.detail.size);\r\n        if (index > -1) {\r\n            this.filesList.splice(index, 1);\r\n        }\r\n        this.refreshState = !this.refreshState;\r\n    }\r\n    componentDidLoad() {\r\n    }\r\n    getFilesFromStorage() {\r\n    }\r\n    render() {\r\n        this.getFilesFromStorage();\r\n        return (h(\"div\", null,\r\n            h(\"div\", { class: \"st_mainPage\" },\r\n                h(\"cwc-file-chooser\", { allowDrop: \"true\", allowClick: \"true\", allowMultiple: \"true\" }),\r\n                h(\"div\", { class: \"st_container\" },\r\n                    h(\"div\", { class: \"st_content_align_center\" },\r\n                        h(\"div\", { class: \"st_uploaded_file st_w_100 st_text-center\" },\r\n                            h(\"div\", { class: \"uploaded_images\" },\r\n                                h(\"div\", { class: \"st_row\" }, this.filesList.length > 0 ?\r\n                                    this.filesList.map((file) => h(\"cwc-upload-item\", { fileProvided: file, endpoint: \"https://master.tus.io/files/\", file: \"Blob\", upload: true, value: this.note }))\r\n                                    : \"No files Added\"))))))));\r\n    }\r\n    static get is() { return \"app-root\"; }\r\n    static get properties() { return {\r\n        \"errors\": {\r\n            \"method\": true\r\n        },\r\n        \"files\": {\r\n            \"state\": true\r\n        },\r\n        \"filesList\": {\r\n            \"state\": true\r\n        },\r\n        \"note\": {\r\n            \"state\": true\r\n        },\r\n        \"refreshState\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"allFiles\",\r\n            \"method\": \"allFiles\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"filesChosen\",\r\n            \"method\": \"onFilesChosen\"\r\n        }, {\r\n            \"name\": \"errors\",\r\n            \"method\": \"onError\"\r\n        }, {\r\n            \"name\": \"progress\",\r\n            \"method\": \"onprogress\"\r\n        }, {\r\n            \"name\": \"cancelEvent\",\r\n            \"method\": \"onCancel\"\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:app-root:**/\"; }\r\n}\r\n"}