{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.tsx","localImports":[],"externalImports":["@stencil/core","@uppy/core","@uppy/dashboard","@uppy/tus","@uppy/xhr-upload","module","tus-js-client"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"cwc-upload-item","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.css","cmpRelativePath":"file-uploader.css","originalComponentPath":"file-uploader.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppProfile","documentation":"","type":"typeof AppProfile"},"encapsulationMeta":0,"componentClass":"AppProfile","membersMeta":{"uppy":{"memberType":16},"fileProvided":{"memberType":1,"attribName":"file-provided","attribType":{"text":"any[]","optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"fileProvided","documentation":"","type":"any[]"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.js"},"jsText":"export class AppProfile {\r\n    constructor() {\r\n        this.fileProvided = [];\r\n        this.uppy = Uppy.Core({ debug: true, autoProceed: true });\r\n    }\r\n    // @Listen('fileProvided')\r\n    // onFileProvided(files) {\r\n    //   console.log(files)\r\n    // }\r\n    componentDidLoad() {\r\n        if (this.fileProvided)\r\n            console.log(this.fileProvided);\r\n    }\r\n    init(e) {\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            var file = e.target.files[i];\r\n            file['pause'] = false;\r\n            file['uploaded'] = false;\r\n            file['progress'] = { bytesUploaded: 0, bytesTotal: file.size, percentage: \"0%\" };\r\n            file['nonUppy'] = true;\r\n            file['id'] = file.name;\r\n            this.currentFiles = [...this.currentFiles, file];\r\n            let self = this;\r\n            let upload = new tus.Upload(file, {\r\n                endpoint: this.serverAddress,\r\n                retryDelays: [0, 1000, 3000, 5000],\r\n                metadata: {\r\n                    filename: file.name,\r\n                    filetype: file.type\r\n                },\r\n                onError: function (error) {\r\n                    self.error = [...self.error, error.message];\r\n                    upload.start();\r\n                    console.log(\"Failed because: \" + error);\r\n                },\r\n                onProgress: function (bytesUploaded, bytesTotal) {\r\n                    var percentage = (Math.round((bytesUploaded * 100) / bytesTotal) + \"%\").toString();\r\n                    // console.log(file)\r\n                    let index = self.currentFiles.findIndex(x => x.id == file.id);\r\n                    if (index > -1) {\r\n                        self.currentFiles[index].progress.bytesUploaded = bytesUploaded;\r\n                        self.currentFiles[index].progress.percentage = percentage;\r\n                    }\r\n                },\r\n                onSuccess: function () {\r\n                    let index = self.currentFiles.findIndex(x => x.id == file.id);\r\n                    if (index > -1) {\r\n                        self.currentFiles[index].uploaded = true;\r\n                    }\r\n                }\r\n            });\r\n            // console.log(tus)\r\n            this.upload = [...this.upload, upload];\r\n            console.log(this.upload);\r\n            upload.start();\r\n            // Start the upload\r\n            // upload.abort()\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"cwc-upload-item\" },\r\n            h(\"h2\", null, \"Using the Input Tag \"),\r\n            h(\"div\", { class: \"UppyForm\" })));\r\n    }\r\n    static get is() { return \"cwc-upload-item\"; }\r\n    static get properties() { return {\r\n        \"fileProvided\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"file-provided\"\r\n        },\r\n        \"uppy\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:cwc-upload-item:**/\"; }\r\n}\r\n"}