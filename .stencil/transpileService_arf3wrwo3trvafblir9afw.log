{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-chooser/file-chooser.tsx","localImports":[],"externalImports":["@stencil/core","tus-js-client"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"cwc-file-chooser","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-chooser/file-chooser.css","cmpRelativePath":"file-chooser.css","originalComponentPath":"file-chooser.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppHome","documentation":"","type":"typeof AppHome"},"encapsulationMeta":0,"componentClass":"AppHome","membersMeta":{"file":{"memberType":16},"uppy":{"memberType":16},"allowDrop":{"memberType":1,"attribName":"allow-drop","attribType":{"text":"String","optional":false,"typeReferences":{"String":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"allowDrop","documentation":"","type":"String"}},"allowClick":{"memberType":1,"attribName":"allow-click","attribType":{"text":"String","optional":false,"typeReferences":{"String":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"allowClick","documentation":"","type":"String"}},"allowMultiple":{"memberType":1,"attribName":"allow-multiple","attribType":{"text":"String","optional":false,"typeReferences":{"String":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"allowMultiple","documentation":"","type":"String"}},"accept":{"memberType":1,"attribName":"accept","attribType":{"text":"String","optional":false,"typeReferences":{"String":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"accept","documentation":"","type":"String"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-chooser/file-chooser.js"},"jsText":"export class AppHome {\r\n    constructor() {\r\n        this.allowDrop = \"true\";\r\n        this.allowClick = \"true\";\r\n        this.allowMultiple = \"true\";\r\n        this.accept = \"\";\r\n        this.file = [];\r\n        this.uppy = Uppy.Core({ debug: true, autoProceed: true });\r\n    }\r\n    componentDidLoad() {\r\n        this.initDragDropArea();\r\n        this.uploadFiles();\r\n        this.progressBarHandler();\r\n    }\r\n    initDragDropArea() {\r\n        if (this.allowDrop == \"true\") {\r\n            this.uppy.use(Uppy.DragDrop, {\r\n                target: '#drag-drop-area',\r\n                width: '100%',\r\n                height: '100%',\r\n                note: null,\r\n                locale: {\r\n                    strings: {\r\n                        dropHereOr: 'Drop files here or %{browse}',\r\n                        browse: 'browse'\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        // Get the selected file from the input element\r\n        var file = e.target.files[0];\r\n        // Create a new tus upload\r\n        var upload = new tus.Upload(file, {\r\n            endpoint: \"http://localhost:1080/files/\",\r\n            retryDelays: [0, 1000, 3000, 5000],\r\n            metadata: {\r\n                filename: file.name,\r\n                filetype: file.type\r\n            },\r\n            onError: function (error) {\r\n                console.log(\"Failed because: \" + error);\r\n            },\r\n            onProgress: function (bytesUploaded, bytesTotal) {\r\n                var percentage = (bytesUploaded / bytesTotal * 100).toFixed(2);\r\n                console.log(bytesUploaded, bytesTotal, percentage + \"%\");\r\n            },\r\n            onSuccess: function () {\r\n                console.log(\"Download %s from %s\", upload.file.name, upload.url);\r\n            }\r\n        });\r\n        // Start the upload\r\n        upload.start();\r\n    }\r\n    addedFiles() {\r\n        this.uppy.on('file-added', (file) => {\r\n            console.log('Added file', file);\r\n        });\r\n    }\r\n    uploadFiles() {\r\n        this.uppy.use(Uppy.Tus, {\r\n            endpoint: 'https://master.tus.io/files/',\r\n            resume: true,\r\n            autoRetry: true,\r\n            retryDelays: [0, 1000, 3000, 5000]\r\n        });\r\n    }\r\n    uploadSuccess() {\r\n        this.uppy.on('upload-success', (file, uploadURL) => {\r\n            console.log(file.name, uploadURL);\r\n            var img = new Image();\r\n            img.width = 300;\r\n            img.alt = \"\";\r\n            img.src = uploadURL;\r\n            document.body.appendChild(img);\r\n        });\r\n    }\r\n    progressBarHandler() {\r\n        const StatusBar = Uppy.StatusBar;\r\n        this.uppy.use(StatusBar, {\r\n            target: '.UppyInput-Progress',\r\n            fixed: true,\r\n            hideAfterFinish: false,\r\n            hideUploadButton: true\r\n        });\r\n    }\r\n    render() {\r\n        return ([\r\n            h(\"div\", { class: \"cwc-file-chooser\" },\r\n                h(\"input\", { type: \"file\", onChange: e => this.handleChange(e) }))\r\n        ]);\r\n    }\r\n    static get is() { return \"cwc-file-chooser\"; }\r\n    static get properties() { return {\r\n        \"accept\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"accept\"\r\n        },\r\n        \"allowClick\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"allow-click\"\r\n        },\r\n        \"allowDrop\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"allow-drop\"\r\n        },\r\n        \"allowMultiple\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"allow-multiple\"\r\n        },\r\n        \"file\": {\r\n            \"state\": true\r\n        },\r\n        \"uppy\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:cwc-file-chooser:**/\"; }\r\n}\r\n"}