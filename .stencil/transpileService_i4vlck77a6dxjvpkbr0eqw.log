{"moduleFile":{"sourceFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.tsx","localImports":[],"externalImports":["@stencil/core","@uppy/core","@uppy/dashboard","@uppy/tus","@uppy/xhr-upload","module","tus-js-client"],"potentialCmpRefs":[],"cmpMeta":{"tagNameMeta":"file-uploader","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.css","cmpRelativePath":"file-uploader.css","originalComponentPath":"file-uploader.css"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppProfile","documentation":"","type":"typeof AppProfile"},"encapsulationMeta":0,"componentClass":"AppProfile","membersMeta":{"fileList":{"memberType":16},"uppy":{"memberType":16},"files":{"memberType":1,"attribName":"files","attribType":{"text":"File[]","optional":false,"typeReferences":{"File":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"files","documentation":"","type":"File[]"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/users/ajayveer/Music/stencil/my-app/src/components/file-uploader/file-uploader.js"},"jsText":"export class AppProfile {\r\n    constructor() {\r\n        this.files = [];\r\n        this.fileList = [];\r\n        this.uppy = Uppy.Core({ debug: true, autoProceed: true });\r\n    }\r\n    componentDidLoad() {\r\n        if (this.files) {\r\n            const FileInput = Uppy.FileInput;\r\n            this.uppy.use(FileInput, {\r\n                target: \".UppyForm\",\r\n                pretty: true,\r\n                inputName: 'files[]',\r\n                replaceTargetContent: true,\r\n                locale: {}\r\n            });\r\n            this.uppy.on('file-added', (file) => {\r\n                console.log('Added file', file);\r\n            });\r\n            this.uppy.use(Uppy.Tus, { endpoint: 'https://master.tus.io/files/' });\r\n            // this.uppy.use(ProgressBar, {\r\n            //   target: 'body',\r\n            //   fixed: true,\r\n            //   hideAfterFinish: false\r\n            // })\r\n            this.uppy.on('upload-success', (file, uploadURL) => {\r\n                console.log(file.name, uploadURL);\r\n                var img = new Image();\r\n                img.width = 300;\r\n                img.alt = \"aa\";\r\n                img.src = uploadURL;\r\n                document.body.appendChild(img);\r\n            });\r\n            this.fileList = [];\r\n            // for (let index in this.files) {\r\n            //   // let file: Uppy.UppyFile = {\r\n            //   //   data: this.files[index],\r\n            //   //   id: index,\r\n            //   //   extension: \"png\",\r\n            //   //   isPaused: false,\r\n            //   //   isRemote: false,\r\n            //   //   meta: { name: this.files[index].name, type: this.files[index].type },\r\n            //   //   name: this.files[index].name,\r\n            //   //   size: this.files[index].size\r\n            //   // }\r\n            //   this.fileList = [...this.fileList, file];\r\n            // }\r\n            // console.log(this.fileList)\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", null,\r\n            h(\"h2\", null, \"Using the input area \"),\r\n            h(\"div\", { class: \"UppyForm\" },\r\n                h(\"form\", { action: \"//api2.transloadit.com\" },\r\n                    h(\"h5\", null, \"Uppy was not loaded \\u2014 slow connection, unsupported browser, weird JS error on a page \\u2014 but the upload still works, because HTML is cool like that\"),\r\n                    h(\"input\", { type: \"file\", name: \"files[]\", multiple: \"\" },\r\n                        h(\"button\", { type: \"submit\" }, \"Fallback Form Upload\")))),\r\n            \") } }\"));\r\n    }\r\n    static get is() { return \"file-uploader\"; }\r\n    static get properties() { return {\r\n        \"fileList\": {\r\n            \"state\": true\r\n        },\r\n        \"files\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"files\"\r\n        },\r\n        \"uppy\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:file-uploader:**/\"; }\r\n}\r\n"}