/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface CwcFileRoot {
    'errors': (e: any) => void;
  }
  interface CwcFileRootAttributes extends StencilHTMLAttributes {
    'onAllFiles'?: (event: CustomEvent) => void;
  }

  interface CwcFileChooser {
    'accept': string[];
    'acceptRatio': string[];
    'allowClick': boolean;
    'allowDrop': boolean;
    'allowMultiple': boolean;
    'maxHeight': number;
    'maxWidth': number;
    'minHeight': number;
    'minWidth': number;
  }
  interface CwcFileChooserAttributes extends StencilHTMLAttributes {
    'accept'?: string[];
    'acceptRatio'?: string[];
    'allowClick'?: boolean;
    'allowDrop'?: boolean;
    'allowMultiple'?: boolean;
    'maxHeight'?: number;
    'maxWidth'?: number;
    'minHeight'?: number;
    'minWidth'?: number;
    'onFilesChosen'?: (event: CustomEvent) => void;
  }

  interface CwcUploadItem {
    'endpoint': String;
    'file': string;
    'fileProvided': any;
    'indicator': string;
    'upload': boolean;
    'value': string;
  }
  interface CwcUploadItemAttributes extends StencilHTMLAttributes {
    'endpoint'?: String;
    'file'?: string;
    'fileProvided'?: any;
    'indicator'?: string;
    'onCancelEvent'?: (event: CustomEvent) => void;
    'onError'?: (event: CustomEvent) => void;
    'onProgress'?: (event: CustomEvent) => void;
    'onSave'?: (event: CustomEvent) => void;
    'upload'?: boolean;
    'value'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'CwcFileRoot': Components.CwcFileRoot;
    'CwcFileChooser': Components.CwcFileChooser;
    'CwcUploadItem': Components.CwcUploadItem;
  }

  interface StencilIntrinsicElements {
    'cwc-file-root': Components.CwcFileRootAttributes;
    'cwc-file-chooser': Components.CwcFileChooserAttributes;
    'cwc-upload-item': Components.CwcUploadItemAttributes;
  }


  interface HTMLCwcFileRootElement extends Components.CwcFileRoot, HTMLStencilElement {}
  var HTMLCwcFileRootElement: {
    prototype: HTMLCwcFileRootElement;
    new (): HTMLCwcFileRootElement;
  };

  interface HTMLCwcFileChooserElement extends Components.CwcFileChooser, HTMLStencilElement {}
  var HTMLCwcFileChooserElement: {
    prototype: HTMLCwcFileChooserElement;
    new (): HTMLCwcFileChooserElement;
  };

  interface HTMLCwcUploadItemElement extends Components.CwcUploadItem, HTMLStencilElement {}
  var HTMLCwcUploadItemElement: {
    prototype: HTMLCwcUploadItemElement;
    new (): HTMLCwcUploadItemElement;
  };

  interface HTMLElementTagNameMap {
    'cwc-file-root': HTMLCwcFileRootElement
    'cwc-file-chooser': HTMLCwcFileChooserElement
    'cwc-upload-item': HTMLCwcUploadItemElement
  }

  interface ElementTagNameMap {
    'cwc-file-root': HTMLCwcFileRootElement;
    'cwc-file-chooser': HTMLCwcFileChooserElement;
    'cwc-upload-item': HTMLCwcUploadItemElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
